openapi: 3.0.0
licence:
  - name: Apache 2.0
  - url: http://www.apache.org/licences/LICENSE-2.0.html
info:
  title: Open Robot Platform
  version: 1.0.0
  description: Self hosted, lightweight, JVM based software automation platform for every day IT operations.
servers:
  - url: http://localhost:8000/
tags:
  - name: project
    description: Endpoints related to Project schema
  - name: factory
    description: Endpoints related to Factory schema
  - name: environments
    description: Endpoints related to Environment schema
  - name: task-force
    description: Endpoints related to TaskForce schema
  - name: job
    description: Endpoints related to Job schema

paths:
  # ------------- Project ------------- #
  /project:
    get:
      operationId: getProjects
      summary: List all projects
      tags:
        - project
      responses:
        '200':
          description: Success
    post:
      operationId: createProject
      summary: Create new project
      tags:
        - project
  /project/{projectId}:
    get:
      operationId: getProjectById
      summary: Get Project by Id
      tags:
        - project
      parameters:
        - in: params
          name: projectId
          description: Id of project
          required: true
          schema:
            type: string
            items:
              type: integer
      responses:
        '200':
          description: Success
    put:
      operationId: updateProject
      summary: Update Project
      tags:
        - project
      parameters:
        - in: params
          name: projectId
          description: Id of project
          required: true
          schema:
            type: string
            items:
              type: integer
      responses:
        '200':
          description: Success
    delete:
      operationId: deleteProject
      summary: Delete Project
      tags:
        - project
      parameters:
        - in: params
          name: projectId
          description: Id of project
          required: true
          schema:
            type: string
            items:
              type: integer
      responses:
        '200':
          description: Success
  /project/{projectId}/files:
    get:
      operationId: getProjectFiles
      summary: Get project files
      tags:
        - project
      parameters:
        - in: params
          name: projectId
          description: Id of project
          required: true
          schema:
            type: string
            items:
              type: integer
      responses:
        '200':
          description: Success
  /project/{projectId}/files/{fileId}:
    get:
      operationId: getProjectFileById
      summary: Get Project File by Id
      tags:
        - project
      parameters:
        - in: params
          name: projectId
          description: id of project
          required: true
          schema:
            type: string
            items:
              type: integer
        - in: params
          name: fileId
          description: id of file
          required: true
          schema:
            type: string
            items:
              type: integer
      responses:
        '200':
          description: Success
  /project/{projectId}/globals:
    get:
      operationId: getProjectGlobals
      summary: Get Global Variables
      tags:
        - project
      parameters:
        - in: params
          name: projectId
          description: id of project
          required: true
          schema:
            type: string
            items:
              type: integer
      responses:
        '200':
          description: Success
    post:
      operationId: createProjectGlobal
      summary: Create Global Variable
      tags:
        - project
      parameters:
        - in: params
          name: projectId
          description: id of project
          required: true
          schema:
            type: string
            items:
              type: integer
        - in: params
          name: fileId
          description: id of file
          required: true
          schema:
            type: string
            items:
              type: integer
      responses:
        '201':
          description: Created
  /project/{projectId}/globals/{globalId}:
    get:
      operationId: getProjectGlobalById
      summary: List Global Variables
      tags:
        - project
      parameters:
        - in: params
          name: projectId
          description: id of project
          required: true
          schema:
            type: string
            items:
              type: integer
        - in: params
          name: globalId
          description: id of file
          required: true
          schema:
            type: string
            items:
              type: integer
      responses:
        '200':
          description: Success
  # ------------- End Project ------------- #

  # ------------- Factory ------------- #
  /factory:
    get:
      operationId: getFactories
      summary: List all factories
      tags:
        - factory
      parameters:
        - in: query
          name: projectId
          description: Id of project
          required: true
          schema:
            type: string
            items:
              type: integer
    post:
      operationId: createFactory
      summary: Create new factory
      tags:
        - factory
      parameters:
        - in: query
          name: projectId
          description: Id of project
          required: true
          schema:
            type: string
            items:
              type: integer
  /factory/{factoryId}:
    get:
      operationId: getFactoryById
      summary: Get factory by id
      tags:
        - factory
      parameters:
        - in: query
          name: projectId
          description: Id of project
          required: true
          schema:
            type: string
            items:
              type: integer
        - in: params
          name: factoryId
          description: Id of factory
          required: true
          schema:
            type: string
            items:
              type: integer
    put:
      operationId: updateFactory
      summary: Update factory
      tags:
        - factory
      parameters:
        - in: query
          name: projectId
          description: Id of project
          required: true
          schema:
            type: string
            items:
              type: integer
        - in: params
          name: factoryId
          description: Id of factory
          required: true
          schema:
            type: string
            items:
              type: integer
    delete:
      operationId: deleteFactory
      summary: Deletes factory
      tags:
        - factory
      parameters:
        - in: query
          name: projectId
          description: Id of project
          required: true
          schema:
            type: string
            items:
              type: integer
        - in: params
          name: factoryId
          description: Id of factory
          required: true
          schema:
            type: string
            items:
              type: integer
  /factory/{factoryId}/packages:
    get:
      operationId: getFactoryPackages
      summary: Get packages by factory
      tags:
        - factory
      parameters:
        - in: params
          name: factoryId
          description: Id of factory
          required: true
          schema:
            type: string
            items:
              type: integer
    put:
      operationId: installPackages
      summary: Install new package(s)
      tags:
        - factory
      parameters:
        - in: params
          name: factoryId
          description: Id of factory
          required: true
          schema:
            type: string
            items:
              type: integer
  /factory/{factoryId}/logs:
    get:
      operationId: getFactoryLogs
      summary: Get logs by factory
      tags:
        - factory
      parameters:
        - in: params
          name: factoryId
          description: Id of factory
          required: true
          schema:
            type: string
            items:
              type: integer
  # ------------- End Factory ------------- #

  # ------------- Task Force ------------- #
  /task-force:
    get:
      operationId: getTaskForces
      summary: List Task Forces
      tags:
        - task-force
      parameters:
        - in: query
          name: projectId
          description: Id of project
          required: true
          schema:
            type: string
            items:
              type: integer
    post:
      operationId: createTaskForce
      summary: Create new task force
      tags:
        - task-force
      parameters:
        - in: query
          name: projectId
          description: Id of project
          required: true
          schema:
            type: string
            items:
              type: integer
  /task-force/commands:
    get:
      taskForceId: getTaskForceCommands
      summary: Get Commands
      tags:
        - task-force
  /task-force/{taskForceId}:
    get:
      taskForceId: getTaskForceById
      summary: Get Task Force
      tags:
        - task-force
      parameters:
        - in: query
          name: projectId
          description: Id of project
          required: true
          schema:
            type: string
            items:
              type: integer
        - in: params
          name: taskForceId
          description: Id of task force
          required: true
          schema:
            type: string
            items:
              type: integer
    put:
      operationId: editTaskForce
      summary: Edit task force
      tags:
        - task-force
      parameters:
        - in: query
          name: projectId
          description: Id of project
          required: true
          schema:
            type: string
            items:
              type: integer
        - in: params
          name: taskForceId
          description: Id of task force
          required: true
          schema:
            type: string
            items:
              type: integer
    delete:
      operationId: deleteTaskForce
      summary: Deletes a job
      tags:
        - task-force
      parameters:
        - in: query
          name: projectId
          description: Id of project
          required: true
          schema:
            type: string
            items:
              type: integer
        - in: params
          name: taskForceId
          description: Id of task force
          required: true
          schema:
            type: string
            items:
              type: integer
  /task-force/{taskForceId}/action:
    post:
      operationId: triggerTaskForceAction
      summary: Trigger a task force action
      tags:
        - task-force
  # ------------- End Task Force ------------- #

  # ------------- Jobs ------------- #
  /jobs:
    get:
      operationId: getJobs
      summary: List all jobs
      tags:
        - job
      parameters:
        - in: query
          name: projectId
          description: Id of project
          required: true
          schema:
            type: string
            items:
              type: integer
    post:
      operationId: createJob
      summary: Create new job
      tags:
        - job
      parameters:
        - in: query
          name: projectId
          description: Id of project
          required: true
          schema:
            type: string
            items:
              type: integer
  /jobs/{jobId}:
    get:
      operationId: getJobById
      summary: Get job by id
      tags:
        - job
      parameters:
        - in: query
          name: projectId
          description: Id of project
          required: true
          schema:
            type: string
            items:
              type: integer
        - in: params
          name: jobId
          description: Id of Job
          required: true
          schema:
            type: string
            items:
              type: integer
    put:
      operationId: editJob
      summary: Edit job
      tags:
        - job
      parameters:
        - in: query
          name: projectId
          description: Id of project
          required: true
          schema:
            type: string
            items:
              type: integer
        - in: params
          name: jobId
          description: Id of Job
          required: true
          schema:
            type: string
            items:
              type: integer
    delete:
      operationId: deleteJob
      summary: Deletes a job
      tags:
        - job
      parameters:
        - in: query
          name: projectId
          description: Id of project
          required: true
          schema:
            type: string
            items:
              type: integer
        - in: params
          name: jobId
          description: Id of Job
          required: true
          schema:
            type: string
            items:
              type: integer
  /jobs/{jobId}/logs:
    get:
      operationId: getJobLogs
      summary: Get job logs by id
      tags:
        - job
      parameters:
        - in: params
          name: jobId
          description: Id of Job
          required: true
          schema:
            type: string
            items:
              type: integer
  # ------------- End Jobs ------------- #

  # ------------- Environments ------------- #
  /environments:
    get:
      operationId: getEnvironments
      summary: List all environments
      tags:
        - environments
      responses:
        '200':
          description: A list of environments
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Environment"
    post:
      operationId: createEnvironment
      summary: Create new environment
      tags:
        - environments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Environment"
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Environment"
  /environments/{environmentId}:
    get:
      operationId: getEnvironmentById
      summary: List environment by id
      tags:
        - environments
      parameters:
        - in: query
          name: projectId
          description: Id of project
          required: true
          schema:
            type: string
            items:
              type: integer
        - in: params
          name: environmentId
          description: Id of Environment
          required: true
          schema:
            type: string
            items:
              type: integer
      responses:
        '200':
          description: Environment with given id
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Environment"
    put:
      operationId: updateEnvironment
      summary: Update existing environment
      tags:
        - environments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Environment"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Environment"
  /environments/{environmentId}/keys:
    get:
      operationId: getEnvironmentKey
      summary: List all environments keys
      tags:
        - environments
      responses:
        '200':
          description: A list of environment keys
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/EnvironmentKey"
    post:
      operationId: createEnvironmentKey
      summary: Create new environment key
      tags:
        - environments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EnvironmentKey"
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/EnvironmentKey"
  /environments/{environmentId}/keys/{keyId}:
    get:
      operationId: getEnvironmentKeyById
      summary: Get environment key by id
      tags:
        - environments
      parameters:
        - in: query
          name: projectId
          description: id of project
          required: true
          schema:
            type: string
            items:
              type: integer
        - in: params
          name: environmentId
          description: id of environment
          required: true
          schema:
            type: string
            items:
              type: integer
        - in: params
          name: keyId
          description: id of key
          required: true
          schema:
            type: string
            items:
              type: integer
    put:
      operationId: updateEnvironmentKey
      summary: Updates project
      tags:
        - environments
      parameters:
        - in: query
          name: projectId
          description: id of project
          required: true
          schema:
            type: string
            items:
              type: integer
        - in: params
          name: environmentId
          description: id of environment
          required: true
          schema:
            type: string
            items:
              type: integer
        - in: params
          name: keyId
          description: id of key
          required: true
          schema:
            type: string
            items:
              type: integer
    delete:
      operationId: deleteEnvironmentKey
      summary: Deletes project
      tags:
        - environments
      parameters:
        - in: query
          name: projectId
          description: id of project
          required: true
          schema:
            type: string
            items:
              type: integer
        - in: params
          name: environmentId
          description: id of environment
          required: true
          schema:
            type: string
            items:
              type: integer
        - in: params
          name: keyId
          description: id of key
          required: true
          schema:
            type: string
            items:
              type: integer
  # ------------- End Environments ------------- #

components:
  schemas:
    Project:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        git:
          type: ProjectGit
        size:
          type: long
        createdAt:
          type: date
        updatedAt:
          type: date
        isDefault:
          type: boolean
    Git:
      type: object
      properties:
        id:
          type: integer
        projectId:
          type: integer
        http:
          type: string
        ssh:
          type: string
    Factory:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        os:
          type: string
        version:
          type: string
        status:
          type: string
        logs:
          type: Log[]
        packages:
          type: Package[]
    Job:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    TaskForce:
      type: object
      properties:
        id:
          type: integer
        projectId:
          type: integer
        name:
          type: string
        robots:
          type: integer[]
        flow:
          type: Flow
        args:
          type: string[]
    Environment:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    EnvironmentKey:
      type: object
      properties:
        environmentId:
          type: integer
        key:
          type: string
        value:
          type: string
        initial:
          type: string
        static:
          type: boolean
    UnAuthorizedResponse:
      type: object
      properties:
        success:
          type: boolean
        code:
          type: number
        message:
          type: string